<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		width="162"
		height="120"
		rollOver="fxFadeIn.play();"
		rollOut="fxFadeOut.play()"
		>
	<fx:Declarations>

		<s:Fade id="fxFadeIn"
				alphaFrom="0"
				alphaTo="1"
				target="{uiControls}"
				startDelay="1000"/>
		<s:Fade id="fxFadeOut"
				target="{uiControls}"
				alphaFrom="1"
				alphaTo="0"
				startDelay="1000"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.conceptualideas.chat.plugins.video.views.VideoBlock")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.conceptualideas.chat.utils.Disposer;

			private function rollHandler(e:Event):void
			{

				if (e.type == MouseEvent.ROLL_OVER && fxFadeIn)
				{
					fxFadeIn.play();
				}
				else if (fxFadeOut)
				{
					fxFadeOut.play();
				}

			}

			private function removeFromStageHandler(e:Event):void
			{
				removeEventListener(Event.REMOVED_FROM_STAGE, removeFromStageHandler);
				removeEventListener(MouseEvent.ROLL_OVER, rollHandler);
				removeEventListener(MouseEvent.ROLL_OUT, rollHandler);
				if (fxFadeIn)
					fxFadeIn.stop()
				if (fxFadeOut)
					fxFadeOut.stop();


				Disposer.dispose(uiMicBitmap);


			}
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="uninitialized"/>
		<s:State name="preview"/>
		<s:State name="selectNoCamera"/>
		<s:State name="publishNoCamera"/>
		<s:State name="publishCamera"/>
	</s:states>

	<!-- SkinParts
		 name=closeButton, type=spark.components.supportClasses.ButtonBase, required=false
		 name=volumeToggleButton, type=spark.components.supportClasses.ToggleButtonBase, required=false
		 name=fullScreenButton, type=spark.components.supportClasses.ButtonBase, required=false
		 name=videoContainer, type=flash.display.DisplayObjectContainer, required=true
		 name=volumeSlider, type=spark.components.supportClasses.SliderBase, required=false
	-->


	<s:SpriteVisualElement id="videoContainer">


	</s:SpriteVisualElement>
	<s:Rect width="100%"
			height="100%"
			includeIn="publishNoCamera">
		<s:fill>
			<s:SolidColor color="0x000000"/>
		</s:fill>
	</s:Rect>
	<s:BitmapImage id="uiMicBitmap"
				   source="@Embed('../skins/assets/gnome-stock-mic_24.png')"
				   verticalCenter="0"
				   horizontalCenter="0"
				   includeIn="publishNoCamera"/>
	<s:Group id="uiControls"
			 excludeFrom="preview"
			 width="100%"
			 height="100%"
			 alpha="0">

		<s:Rect width="100%"
				height="21"
				top="0"
				id="top">
			<s:fill>
				<s:SolidColor color="0x000000"
							  alpha=".5"/>
			</s:fill>
		</s:Rect>
		<s:Label left="0"
				 paddingLeft="5"
				 top="2"
				 right="32"
				 text="{hostComponent.label}"/>


		<s:Button skinClass="com.conceptualideas.chat.plugins.video.skins.VideoBlockCloseButton"
				  top="2"
				  right="22"
				  id="closeButton"
				  width="18"
				  height="18"
				  buttonMode="true"
				  useHandCursor="true"/>
		<s:Button id="fullScreenButton"
				  right="2"
				  top="2"
				  width="18"
				  height="18"
				  skinClass="com.conceptualideas.chat.plugins.video.skins.VideoBlockFullScreenButtonSkin"
				  buttonMode="true"
				  useHandCursor="true"/>
		<s:VSlider skinClass="com.conceptualideas.chat.plugins.video.skins.VSliderSkin"
				   verticalCenter="0"
				   height="{width/3}"
				   id="volumeSlider"
				   right="5"/>

		<s:ToggleButton skinClass="com.conceptualideas.chat.plugins.video.skins.VolumeToggleButtonSkin"
						width="18"
						height="18"
						id="volumeToggleButton"
						left="5"
						bottom="5"/>

	</s:Group>
</s:Skin>
